{"version":3,"file":"webm-parser.min.js","sources":["../src/logging.js","../src/helpers.js","../src/constants.js","../src/element.js","../src/elements/header.js","../src/elements/seek-head.js","../src/elements/tracks.js","../src/elements/cues.js","../src/elements/cluster.js","../src/elements/segment.js","../src/index.js","../src/parser.js"],"sourcesContent":["import { LOG_PREFIX, DEBUG_MODE } from \"./constants\"\r\n\r\n\r\nexport function log() {\r\n    if (DEBUG_MODE) {\r\n        console.log(LOG_PREFIX, 'font-weight: bold; color: #fa066b', ...arguments)\r\n    }\r\n}\r\n\r\nexport function warn() {\r\n    if (DEBUG_MODE) {\r\n        console.warn(LOG_PREFIX, 'font-weight: bold; color: #fa066b', ...arguments)\r\n    }\r\n}\r\n\r\nexport function error() {\r\n    console.error(LOG_PREFIX, 'font-weight: bold; color: #fa066b', ...arguments)\r\n}","/**\r\n * Prints array of unsigned integers as hex\r\n * @param {Uint8Array} bytes \r\n * @param {string} prefix \r\n */\r\nexport function printInHex(bytes, prefix) {\r\n    if (prefix === undefined) prefix = '';\r\n    let str = '';\r\n    for (let i = 0, len = bytes.length; i < len; i++) {\r\n        str += bytes[i].toString(16).padStart(2, '0').toUpperCase() + ' ';\r\n    }\r\n    WebM.log(prefix, str);\r\n}\r\n\r\n\r\n/**\r\n * Converts integer to array of bytes\r\n * @param {integer} int \r\n */\r\nexport function intToBytes(int) {\r\n    let arr = new Uint8Array([\r\n            (int & 0xff000000) >> 24,\r\n            (int & 0x00ff0000) >> 16,\r\n            (int & 0x0000ff00) >> 8,\r\n            (int & 0x000000ff)\r\n    ]);\r\n\r\n    let res = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        if (arr[i] !== 0 || res.length) {\r\n            res.push(arr[i]);\r\n        }\r\n    }\r\n\r\n    return res;\r\n}","export const DEBUG_MODE = true\r\nexport const LOG_PREFIX = '%c WebM Parser:'\r\n\r\n\r\n// EBML elements types.\r\nexport const TYPE_MASTER = 'master' // Master element\r\nexport const TYPE_INT    = 'int'    // Signed integer. Big-endian, any size (1 - 8 bytes)\r\nexport const TYPE_UINT   = 'uint'   // Unsigned integer. Big-endian, any size (1 - 8 bytes)\r\nexport const TYPE_FLOAT  = 'float'  // Float. Big-endian, defined for 4 and 8 bytes (32, 64 bits)\r\nexport const TYPE_BINARY = 'bin'    // Not interpreted by the parser\r\nexport const TYPE_UTF_8  = 'utf8'   // Unicode string, zero padded when needed (RFC 2279)\r\nexport const TYPE_STRING = 'string' // Printable ASCII (0x20 to 0x7E), zero-padded when needed\r\nexport const TYPE_DATE   = 'date'   /* Signed 8 octets integer in nanoseconds with 0 indicating \r\n                                    the precise beginning of the millennium \r\n                                    (at 2001-01-01T00:00:00,000000000 UTC) */","import { log, warn } from \"./logging\"\r\nimport { printInHex } from './helpers';\r\n\r\n\r\nexport default class WebMElement\r\n{\r\n    constructor(name, type) {\r\n\r\n        Object.defineProperty(this, '_name', {\r\n            enumerable: false,\r\n            value: name.slice(0, 1).toLowerCase() + name.slice(1)\r\n        })\r\n\r\n        Object.defineProperty(this, '_type', {\r\n            enumerable: false,\r\n            value: type || WebM.TYPE_UINT\r\n        })\r\n\r\n        Object.defineProperty(this, '_position', {\r\n            enumerable: false,\r\n            value: undefined\r\n        })\r\n\r\n        Object.defineProperty(this, '_length', {\r\n            enumerable: false,\r\n            value: undefined\r\n        })\r\n\r\n        Object.defineProperty(this, '_contentLength', {\r\n            enumerable: false,\r\n            value: undefined\r\n        })\r\n\r\n        Object.defineProperty(this, '_availableElements', {\r\n            enumerable: false,\r\n            value: []\r\n        })\r\n\r\n        Object.defineProperty(this, 'is' + name, {\r\n            enumerable: false,\r\n            value: true\r\n        })\r\n\r\n        Object.defineProperty(this, 'EBML_ID', {\r\n            enumerable: false,\r\n            value: []\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Uint8Array} bytes \r\n     * @param {int} offset \r\n     * @param {bool} onlyTry If true no logging will be done on fail.\r\n     * @return {bool} Returns true on if EBML ID is presented. Please make data check by yourself.\r\n     */\r\n    parse(bytes, offset, onlyTry) {\r\n        log(\"Parsing \" + this._name + \" ...\")\r\n\r\n        // Set default values\r\n        if (offset === undefined) offset = 0\r\n        if (onlyTry === undefined) onlyTry = false\r\n\r\n        // Check for EBML ID\r\n        let len = Math.min(this.EBML_ID.length, bytes.length - offset)\r\n        try {\r\n            if (len < this.EBML_ID.length) {\r\n                throw 'Unable to parse ' + this._name + ': Too few bytes'\r\n            }\r\n\r\n            for (let i = 0, len = this.EBML_ID.length; i < len; i++) {\r\n                if (bytes[offset + i] !== this.EBML_ID[i]) {\r\n                    throw 'Unable to parse ' + this._name + ': ID doesn\\'t match'\r\n                }\r\n            }\r\n        } catch(e) {\r\n            if (!onlyTry) {\r\n                printInHex(bytes.slice(offset - 10, offset + 10))\r\n                let given = []\r\n                let id = []\r\n                for (let i = 0; i < len; i++) {\r\n                    given.push(bytes[offset + i].toString(16).toUpperCase())\r\n                }\r\n                for (let i = 0; i < this.EBML_ID.length; i++) {\r\n                    id.push(this.EBML_ID[i].toString(16).toUpperCase())\r\n                }\r\n                warn(e, 'Given: [' + given.join(' '), ']   ID: [', id.join(' ') + ']')\r\n            }\r\n            return false;\r\n        }\r\n        \r\n        \r\n        // Set meta-data of the element.\r\n        this._position = offset - 1\r\n        offset += this.EBML_ID.length\r\n        let contentSize = VInt.parse(bytes.slice(offset, offset + 8))\r\n        offset += contentSize.bytesCount\r\n        this._contentLength = contentSize.value\r\n        this._length = this.EBML_ID.length + contentSize.bytesCount + (contentSize.value >= 0 ? contentSize.value : 0)\r\n\r\n        // Parse content depending on element type.\r\n        let sliceLen = contentSize.value >= 0 ? contentSize.value : bytes.length - offset\r\n        switch(this._type)\r\n        {\r\n            case WebM.TYPE_STRING:\r\n                this.value = new TextDecoder(\"utf-8\")\r\n                .decode(bytes.slice(offset, offset + sliceLen))\r\n                break\r\n                \r\n            case WebM.TYPE_INT:\r\n                this.value = VInt.parse(bytes.slice(offset, offset + sliceLen)).value\r\n                break\r\n\r\n            case WebM.TYPE_UINT:\r\n                this.value = VInt.parse(bytes.slice(offset, offset + sliceLen)).value\r\n                break\r\n\r\n            case WebM.TYPE_BINARY:\r\n                this.value = bytes.slice(offset, offset + sliceLen)\r\n                break\r\n\r\n            case WebM.TYPE_MASTER:\r\n                let maxTries = 1000\r\n                let elements = this._availableElements.slice(0)\r\n                let totalParsed = 0\r\n                do {\r\n                    totalParsed = 0\r\n                    \r\n                    for (let i = 0, len = elements.length; i < len; i++) {\r\n                        let el = new elements[i]()\r\n                        if (el.parse(bytes, offset, false)) {\r\n                            elements.splice(i, 1).slice(0)\r\n                            this[el._name] = el\r\n                            offset += el._length\r\n                            if (this._contentLength < 0 && el._length > 0) {\r\n                                this._length += el._length\r\n                            }\r\n                            totalParsed++\r\n                            break;\r\n                        }\r\n                    }\r\n                } while(maxTries > 0 && totalParsed > 0 && elements.length > 0)\r\n        }\r\n        this.onParsingDone(bytes, offset)\r\n        return true\r\n    }\r\n\r\n    onParsingDone(bytes, offset) {\r\n        // This method may be overridden in sub-class\r\n    }\r\n\r\n    /**\r\n     * Parses data sequence of elements in the given property.\r\n     * @param {string} propName \r\n     * @param {function} constructor \r\n     * @param {Uint8Array} bytes \r\n     * @param {int} offset \r\n     */\r\n    parseChildren(propName, constructor, bytes, offset) {\r\n        log('Parsing children (' + constructor.name + ')')\r\n        do {\r\n            let el = new constructor()\r\n            if (el.parse(bytes, offset, true)) {\r\n                offset += el._length\r\n                this._length += el._length\r\n                this[propName].push(el)\r\n                continue;\r\n            }\r\n            break\r\n        } while(true)\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER, TYPE_UINT } from \"../constants\"\r\n\r\n\r\n// Represents first EBML element with meta-information\r\nexport class WebMHeader extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Header', TYPE_MASTER)\r\n\r\n        this._availableElements = [\r\n            WebMVersion, \r\n            WebMReadVersion,\r\n            WebMMaxIDLength\r\n        ]\r\n    \r\n        this.EBML_ID = [26, 69, 223, 163] // HEX: 1A 45 DF A3\r\n    }\r\n}\r\n\r\n\r\nexport class WebMVersion extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Version', TYPE_UINT)\r\n        this.value = undefined\r\n        this.EBML_ID = [66, 134] // HEX: 42 86\r\n    }\r\n}\r\n\r\n\r\nexport class WebMReadVersion extends WebMElement\r\n{\r\n    constructor() {\r\n        super('ReadVersion', TYPE_UINT)\r\n        this.value = undefined\r\n        this.EBML_ID = [66, 247] // HEX: 42 F7\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class WebMMaxIDLength extends WebMElement\r\n{\r\n    constructor() {\r\n        super('MaxIDLength', TYPE_UINT)\r\n        this.value = undefined\r\n        this.EBML_ID = [66, 242] // HEX: 42 F2\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER, TYPE_UINT, TYPE_BINARY } from \"../constants\"\r\n\r\n\r\nexport class WebMSeekHead extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SeekHead', TYPE_MASTER)\r\n\r\n        this.seeks = []\r\n        this.EBML_ID = [17, 77, 155, 116] // HEX: 11 4D 9B 74\r\n    }\r\n\r\n    onParsingDone(bytes, offset) {\r\n        this.parseChildren('seeks', WebMSeek, bytes, offset)\r\n    }\r\n}\r\n\r\n\r\nexport class WebMSeek extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Seek', TYPE_MASTER)\r\n        this._availableElements = [\r\n            WebMSeekId,\r\n            WebMSeekPosition\r\n        ];\r\n        this.EBML_ID = [77, 187] // HEX: 4D BB\r\n    }\r\n}\r\n\r\n\r\nexport class WebMSeekId extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SeekId', TYPE_BINARY)\r\n        this.EBML_ID = [83, 171] // HEX: 53 AB\r\n    }\r\n}\r\n\r\n\r\nexport class WebMSeekPosition extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SeekPosition', TYPE_UINT)\r\n        this.EBML_ID = [83, 172] // HEX: 53 AC\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER, TYPE_UINT } from \"../constants\"\r\n\r\n\r\nexport class WebMTracks extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Tracks', TYPE_MASTER)\r\n\r\n        this.entries = []\r\n\r\n        this.EBML_ID = [22, 84, 174, 107] // HEX: 16 54 AE 6B\r\n    }\r\n\r\n    onParsingDone(bytes, offset) {\r\n        this.parseChildren('entries', WebMTrackEntry, bytes, offset)\r\n    }\r\n}\r\n\r\n\r\nexport class WebMTrackEntry extends WebMElement\r\n{\r\n    constructor() {\r\n        super('TrackEntry', TYPE_MASTER)\r\n\r\n        this._availableElements = [\r\n            WebMTrackNumber,\r\n            WebMTrackUID,\r\n            WebMVideo,\r\n            WebMAudio\r\n        ]\r\n        \r\n        this.EBML_ID = [174] // HEX: AE\r\n    }\r\n}\r\n\r\n\r\nexport class WebMTrackUID extends WebMElement\r\n{\r\n    constructor() {\r\n        super('TrackUID', TYPE_UINT)\r\n        this.EBML_ID = [115, 197] // HEX: 73 C5\r\n    }\r\n}\r\n\r\n\r\nexport class WebMTrackNumber extends WebMElement\r\n{\r\n    constructor() {\r\n        super('TrackNumber', TYPE_UINT)\r\n        this.EBML_ID = [215] // HEX: D7\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class WebMVideo extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Video', TYPE_MASTER)\r\n        this.EBML_ID = [224] // HEX: E0\r\n    }\r\n}\r\n\r\n\r\nexport class WebMAudio extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Audio', TYPE_MASTER)\r\n        this.EBML_ID = [225] // HEX: E1\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER } from \"../constants\"\r\n\r\nexport class WebMCues extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Cues', TYPE_MASTER)\r\n        this.EBML_ID = [28, 83, 187, 107] // HEX: 1C 53 BB 6B\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER, TYPE_UINT, TYPE_BINARY } from \"../constants\"\r\n\r\n\r\nexport class WebMCluster extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Cluster', TYPE_MASTER)\r\n\r\n        this._availableElements = [\r\n            WebMClusterTimestamp\r\n        ]\r\n\r\n        this.simpleBlocks = []\r\n\r\n        this.EBML_ID = [31, 67, 182, 117] // HEX: 1F 43 B6 75\r\n    }\r\n\r\n    onParsingDone(bytes, offset) {\r\n        this.parseChildren('simpleBlocks', WebMSimpleBlock, bytes, offset)\r\n    }\r\n\r\n    /**\r\n     * Regenerates bytes of the cluster.\r\n     * IMPORTANT! This method is in development yet.\r\n     */\r\n    regenerateBytes() {\r\n\r\n        let f = 0;\r\n        let cap = this.EBML_ID.length;\r\n        cap += this.timestamp._length;\r\n        \r\n        for (let i = 0, len = this.simpleBlocks.length; i < len; i++) {\r\n            cap += this.simpleBlocks[i]._length;\r\n        }\r\n\r\n        let b = new Uint8Array(cap);\r\n\r\n        for (let i = 0, len = this.EBML_ID.length; i < len; i++) {\r\n            b[f++] = this.EBML_ID[i];\r\n        }\r\n\r\n        b[f++] = 1;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n        b[f++] = 255;\r\n\r\n        // Timestamp.\r\n        for (let i = 0, len = this.timestamp.EBML_ID.length; i < len; i++) {\r\n            b[f++] = this.timestamp.EBML_ID[i];\r\n        }\r\n        \r\n        let lenBytes = VInt.createBytes(this.timestamp._contentLength);\r\n        for (let k = 0; k < lenBytes.length; k++) {\r\n            b[f++] = lenBytes[k];\r\n        }\r\n\r\n        let lenBytes2 = WebM.intToBytes(this.timestamp.value);\r\n        for (let k = 0; k < lenBytes2.length; k++) {\r\n            b[f++] = lenBytes2[k];\r\n        }\r\n\r\n        for (let i = 0, len = this.simpleBlocks.length; i < len; i++) {\r\n            let block = this.simpleBlocks[i];\r\n    \r\n            \r\n            for (let j = 0, len2 = block.EBML_ID.length; j < len2; j++) {\r\n                b[f++] = block.EBML_ID[j];\r\n            }\r\n\r\n            let lenBytes = VInt.createBytes(block._contentLength);\r\n            for (let k = 0; k < lenBytes.length; k++) {\r\n                b[f++] = lenBytes[k];\r\n            }\r\n            \r\n\r\n            for (let j = 0, len2 = block.value.length; j < len2; j++) {\r\n                b[f++] = block.value[j];\r\n            }\r\n        }\r\n\r\n        return b;\r\n    }\r\n}\r\n\r\n\r\nexport class WebMClusterTimestamp extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Timestamp', TYPE_UINT)\r\n        this.EBML_ID = [231] // HEX: E7\r\n    }\r\n\r\n\r\n    setValue(value) {\r\n        this.value = value\r\n        this._contentLength = Math.max(WebM.intToBytes(value).length, 1)\r\n        this._length = this.EBML_ID.length + 1 + this._contentLength\r\n    }\r\n}\r\n\r\n\r\nexport class WebMSimpleBlock extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SimpleBlock', TYPE_BINARY)\r\n        this.EBML_ID = [163] // HEX: A3\r\n    }\r\n}","import WebMElement from '../element'\r\nimport { TYPE_MASTER, TYPE_BINARY } from \"../constants\"\r\nimport { WebMSeekHead } from \"./seek-head\"\r\nimport { WebMTracks } from \"./tracks\"\r\nimport { WebMCues } from \"./cues\"\r\nimport { WebMCluster } from './cluster'\r\n\r\n\r\nexport class WebMSegment extends WebMElement\r\n{\r\n    constructor() {\r\n        super('Segment', TYPE_MASTER)\r\n\r\n        this._availableElements = [\r\n            WebMSeekHead,\r\n            WebMSegmentInfo,\r\n            WebMTracks,\r\n            WebMCues\r\n        ]\r\n\r\n        this.clusters = []\r\n\r\n        this.EBML_ID = [24, 83, 128, 103] // HEX: 18 53 80 67\r\n    }\r\n\r\n    onParsingDone(bytes, offset) {\r\n        this.parseChildren('clusters', WebMCluster, bytes, offset)\r\n    }\r\n\r\n\r\n    getLastCluster() {\r\n        return this.clusters[this.clusters.length - 1]\r\n    }\r\n}\r\n\r\n\r\nexport class WebMSegmentInfo extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SegmentInfo', TYPE_MASTER)\r\n\r\n        this._availableElements = [\r\n            WebMSegmentUID\r\n        ]\r\n\r\n        this.EBML_ID = [21, 73, 169, 102] // HEX: 15 49 A9 66\r\n    }\r\n}\r\n\r\nexport class WebMSegmentUID extends WebMElement\r\n{\r\n    constructor() {\r\n        super('SegmentUID', TYPE_BINARY)\r\n        this.EBML_ID = [115, 164] // HEX: 73 A4\r\n    }\r\n}\r\n","import WebM from './parser'\r\nimport { WebMCluster } from './elements/cluster'\r\n\r\n\r\n\r\nwindow.WebM = WebM\r\nwindow.WebMCluster = WebMCluster","import { log } from \"./logging\"\r\nimport { WebMHeader } from \"./elements/header\"\r\nimport { WebMSegment } from \"./elements/segment\"\r\n\r\nexport default class WebM\r\n{\r\n    constructor() {\r\n        this.header = new WebMHeader()   // EMBL info\r\n        this.segment = new WebMSegment() // Segment info\r\n    }\r\n\r\n    /**\r\n     * Array buffer that contains video data.\r\n     * @param {Uint8Array} buffer \r\n     */\r\n    parse(bytes) {\r\n        log(\"Started...\")\r\n\r\n        // Parse header (EMBL element)\r\n        this.header.parse(bytes)\r\n        \r\n        // Parse segment element\r\n        if (this.header._length) {\r\n            this.segment.parse(bytes, this.header._length)\r\n        }\r\n    }\r\n}"],"names":["log","console","LOG_PREFIX","arguments","warn","printInHex","bytes","prefix","str","i","len","length","toString","padStart","toUpperCase","WebM","TYPE_MASTER","TYPE_UINT","TYPE_BINARY","WebMElement","constructor","name","type","Object","defineProperty","enumerable","value","slice","toLowerCase","parse","offset","onlyTry","Math","min","_name","EBML_ID","e","given","id","push","join","_position","contentSize","VInt","bytesCount","_contentLength","_length","sliceLen","_type","TYPE_STRING","TextDecoder","decode","TYPE_INT","elements","_availableElements","totalParsed","el","splice","onParsingDone","parseChildren","propName","WebMHeader","WebMVersion","WebMReadVersion","WebMMaxIDLength","WebMSeekHead","seeks","WebMSeek","WebMSeekId","WebMSeekPosition","WebMTracks","entries","WebMTrackEntry","WebMTrackNumber","WebMTrackUID","WebMVideo","WebMAudio","WebMCues","WebMCluster","WebMClusterTimestamp","simpleBlocks","WebMSimpleBlock","regenerateBytes","f","cap","timestamp","b","Uint8Array","lenBytes","createBytes","k","lenBytes2","intToBytes","block","j","len2","setValue","max","WebMSegment","WebMSegmentInfo","clusters","getLastCluster","WebMSegmentUID","window","header","segment"],"mappings":"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"}